function __clist(){
    for line in {0..7}; do for col in {0..31}; do code=$(( $col * 8 + $line )); printf $'\e[38;05;%dm %03d' $code $code ;done; echo ;done
}
function __c(){
    printf $'\[\e[38;05;%dm\]' $1
}

function __bclist(){
    for line in {0..7}; do for col in {0..31}; do code=$(( $col * 8 + $line )); printf $'\e[48;05;%dm %03d' $code $code ;done; echo ;done
}
function __bc(){
    printf $'\[\e[48;05;%dm\]' $1
}


vcprompt ()
{
    local b="$(git symbolic-ref --short HEAD 2>/dev/null)";
    if [ -n "$b" ]; then
        local branch=${b##refs/heads/};

        if [ "$branch" = "master" ]; then
            printf "(%s)" "m$m";
        elif [ "$branch" = "trunk" ]; then
            printf "(%s)" "t$m";
        else
            printf "(%s)" "$branch$m";
        fi
    fi
}

c=${PS1_COLOR:-199};

PS1_SYM=${PS1_SYM:-âš›};

#     PS1="$(__bc 0)$(__c 105)[\T] $(__c 237)\u@\h $(__c 74)\w$(__c 253) $(__c 35)\$(vcprompt)\n$(__c $c)\n$s $(__c 253)"

PS1_SYM_OK=${PS1_SYM_OK:-PS1_SYM}
PS1_SYM_ERR=${PS1_SYM_ERR:-PS1_SYM}

PROMPT_COMMAND=__prompt_command

__prompt_command() {
    local EXIT="$?"
    
    local RCol='\[\e[0m\]'

    local Red='\[\e[0;31m\]'
    local Gre='\[\e[0;32m\]'
    
    if [ $EXIT != 0 ]; then
        s="${Red}$PS1_SYM_ERR"
    else
        s=$(__c $c)$PS1_SYM_OK
    fi

    PS1="$(__bc 0)$(__c 105)[\T] $(__c 237)\u@\h $(__c 74)\w$(__c 253) $(__c 35)\$(vcprompt)\n$s $(__c 253)"
}
